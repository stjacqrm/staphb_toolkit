//#####################
//####Docker Params####
//#####################
//docker.enabled = true
//docker.runOptions = ""

//####################
//#Singularity Params#
//####################
//singularity.enabled = true
//singularity.runOptions = ""
//process.stageInMode = "link"

//####################
//##AWS Batch Params##
//####################
//process.executor = 'awsbatch'
//process.queue = ''
//aws.batch.cliPath = '/home/ec2-user/miniconda/bin/aws'
//aws.region = 'us-east-1'
//workDir = 's3://'

//#######################
//##Google Cloud Params##
//#######################
//process.executor = ''
//google.project = ''
//google.location = ''
//google.region = ''
//workDir = ''
//google.lifeSciences.bootDiskSize = 50.GB

//#########################
//####Docker Containers####
//#########################

trimmomatic_container = 'staphb/trimmomatic:0.39'
bbtools_container = 'staphb/bbtools:38.76'
fastqc_container = 'staphb/fastqc:0.11.8'
quast_container = 'staphb/quast:5.0.2'
tiptoft_container = 'staphb/tiptoft:1.0.0'
ivar_container = 'staphb/ivar:1.2.1-SC2'
samtools_container = 'staphb/samtools:1.10'
vigor_container = 'staphb/vigor4:4.1.20190131'
geneblocks_container = 'geneblocks:latest'

//#####################
//###Pipeline Params###
//#####################

//PreProcessing
params.name_split_on=""

//Trimming
params.minlength=75
params.windowsize=4
params.qualitytrimscore=30
params.savetrimmedreads=false

//iVar
params.ivar_mindepth=1
params.ivar_minfreq=0

process {

  cpus = 2
  memory = '2 GB'

  withName:preProcess{
    container = fastqc_container
  }
  withName:trim{
    cpus = 4
    memory = '8 GB'
    container = trimmomatic_container
  }
  withName:cleanreads{
    cpus = 4
    memory = '8 GB'
    container = bbtools_container
  }
  withName:fastqc{
    container = fastqc_container
  }
  withName:quast{
    container = quast_container
  }
  withName:ivar{
    cpus = 4
    memory = '8 GB'
    container = ivar_container
  }
  withName:samtools{
    cpus = 2
    memory = '2 GB'
    container = samtools_container
  }
  withName:assembly_results{
    cpus = 2
    memory = '2 GB'
    container = tiptoft_container
  }
  withName:annotate{
    container = vigor_container
  }
  withName:convert_gff_gb{
    container = geneblocks_container
  }
  withName:viz_genomes{
    container = geneblocks_container
  }
}
